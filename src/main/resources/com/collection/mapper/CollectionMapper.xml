<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.collection.mapper.CollectionMapper">
	
	<insert id="insertCollection">
	
		<!-- insert into collection (seq, title, startDate, endDate, realmName, gpsX, gpsY, thumbnail)
		values (#{seq, jdbcType=VARCHAR}, #{title, jdbcType=VARCHAR}, #{startDate, jdbcType=VARCHAR}, #{endDate, jdbcType=VARCHAR}, #{realmName, jdbcType=VARCHAR}, 
		#{gpsX, jdbcType=VARCHAR}, #{gpsY, jdbcType=VARCHAR}, #{thumbnail, jdbcType=VARCHAR}) -->
		
		insert into collection (seq, title, startDate, endDate, realmName, gpsX, gpsY, thumbnail, place, price, url, phone, placeAddr, area, imgUrl)
		values (#{seq, jdbcType=BIGINT}, #{title, jdbcType=VARCHAR}, #{startDate, jdbcType=VARCHAR}, #{endDate, jdbcType=VARCHAR}, #{realmName, jdbcType=VARCHAR}, 
		#{gpsX, jdbcType=DOUBLE}, #{gpsY, jdbcType=DOUBLE}, #{thumbnail, jdbcType=VARCHAR}, #{place, jdbcType=VARCHAR}, #{price, jdbcType=VARCHAR},
		#{url, jdbcType=VARCHAR}, #{phone, jdbcType=VARCHAR}, #{placeAddr, jdbcType=VARCHAR}, #{area, jdbcType=VARCHAR}, #{imgUrl, jdbcType=VARCHAR})
	
	</insert>
	
	
	<select id="getCollectionList" resultType="com.collection.domain.CollectionVO">
		select*from collection
		order by endDate desc  
	</select>
	
	<select id="getCollection" resultType="com.collection.domain.CollectionVO">
		select * from collection where seq = #{seq}
	</select>
	
	<sql id="criteria">
		<choose>
			<when test="type == 'T'.toString()">
				<!-- where seq=#{seq} -->
				where
				title like concat('%', #{keyword}, '%')
			</when>
			<!-- <when test="type=='D'.toString()">
				where seq=#{seq}
				and startDate like concat('%', #{keyword}, '%')
			</when> -->	
			<!-- <otherwise>
				where seq=#{seq}
			</otherwise> -->
		</choose>
	</sql>
	
	
	
	<select id="getListWithPaging" resultType="com.collection.domain.CollectionVO">

    select * 
    from(select seq, title, startDate, endDate, imgUrl, revViewCount from collection
    <include refid="criteria"></include>
    )as collectionPaging
    order by endDate desc limit #{pageNumForLimit},12

	</select>

 
	<select id="getTotalCount" resultType="int">
		select count(*) from collection
		<!-- <include refid="criteria"></include> -->

	</select>
	
	<update id="revViewCount">
		update collection 
		set revViewCount = revViewCount + 1
		where seq = #{seq}
	</update>
	

</mapper>