<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.collection.mapper.CollectionMapper">
	
	<insert id="insertCollection">
		insert into collection 
		(seq, title, startDate, endDate, realmName, gpsX, gpsY, thumbnail, place, price, url, phone, placeAddr, area, imgUrl)
		values (#{seq, jdbcType=BIGINT}, #{title, jdbcType=VARCHAR}, #{startDate, jdbcType=VARCHAR}, #{endDate, jdbcType=VARCHAR}, #{realmName, jdbcType=VARCHAR}, 
		#{gpsX, jdbcType=DOUBLE}, #{gpsY, jdbcType=DOUBLE}, #{thumbnail, jdbcType=VARCHAR}, #{place, jdbcType=VARCHAR}, #{price, jdbcType=VARCHAR},
		#{url, jdbcType=VARCHAR}, #{phone, jdbcType=VARCHAR}, #{placeAddr, jdbcType=VARCHAR}, #{area, jdbcType=VARCHAR}, #{imgUrl, jdbcType=VARCHAR})
		ON DUPLICATE KEY UPDATE
        title = #{title},
        startDate = #{startDate},
        endDate = #{endDate},
        realmName = #{realmName},
        gpsX = #{gpsX},
        gpsY = #{gpsY},
        thumbnail = #{thumbnail},
        place = #{place},
        url = #{url},
        price = #{price},
        phone = #{phone},
        placeAddr = #{placeAddr},
        area = #{area},
        imgUrl = #{imgUrl}		
	</insert>
	
	<delete id="deleteCollection">
	<![CDATA[
		delete from collection where endDate < CURDATE();
		]]>
	</delete>
	
	
	<select id="getIndexList" resultType="com.arco.domain.BoardVO">
	<![CDATA[
		select * from post ORDER BY post_id DESC limit 5
	]]>
	</select>
	
	<select id="getCollectionList" resultType="com.collection.domain.CollectionVO">
		select*from collection
		order by endDate desc  
	</select>
	
	<select id="getCollection" resultType="com.collection.domain.CollectionVO">
		select * from collection where seq = #{seq}
	</select>
	
	<sql id="criteria">
		<choose>
			<when test="type == 'T'.toString()">
				where title like concat('%', #{keyword}, '%') 
			</when>
			<when test="type == 'D'.toString()">
				where endDate >= #{date}
			</when>
		</choose>
	</sql>
	
	
	
	<sql id="sort">

		 <choose>
			<when test='sort == "endDate"'>
				 order by endDate asc
			</when>
			<when test='sort == "revViewCount"'>
				 order by revViewCount desc
			</when>
			<when test='sort == "star"'>
				 order by starAvg desc
			</when>
		</choose> 

	</sql>
	
	
	<!-- <select id="getListWithPagingSort" resultType="com.collection.domain.CollectionVO">

    select * 
    from(select seq, title, startDate, endDate, imgUrl, revViewCount from collection
    <include refid="sort"></include>
    )as collectionPaging limit #{pageNumForLimit},12
 
	</select> -->
	
	
	<select id="getListWithPaging" resultType="com.collection.domain.CollectionVO">

    select * 
    from(select seq, title, startDate, endDate, imgUrl, viewCount,reviewCount, thumbnail, starAvg from collection
    <include refid="criteria"></include>
    )as collectionPaging
    where endDate >= now()     
    <include refid="sort"></include> limit #{pageNumForLimit},12

	</select>
 	
	<select id="getTotalCount" resultType="int">
		select count(*) from collection
		<include refid="criteria"></include>
	</select>
	
	<update id="revViewCount">
		update collection 
		set viewCount = viewCount + 1
		where seq = #{seq}
	</update>
	
	<update id="reviewCount">
		update collection
		set reviewCount = (select count(*) from collectionRev where seq = #{seq})
		where seq = #{seq}
	</update>
	
	<update id="starAvg">
		UPDATE collection cr 
		SET cr.starAvg = ROUND((SELECT SUM(rv.revStar) FROM collectionRev rv WHERE rv.seq = #{seq}) / 
                       (SELECT COUNT(*) FROM collectionRev WHERE seq = #{seq}), 1)
		WHERE cr.seq = #{seq};
	</update>
	
	
	<update id="updateAPI">
	
	update collection 
	set 
	startDate = #{startDate},
	endDate = #{endDate},
	place = #{place},
	price = #{price},
	url = #{url},
	gpsX = #{gpsX},
	gpsY = #{gpsY},
	phone = #{phone},
	thumbnail = #{thumbnail}
	
	where seq = #{seq}
	
	</update>
	

</mapper>